ruby:
  set_meta_tags(
    title: "#{ @hotel.chinese } - #{t('admin.seo.title')}"
  )
  show = !params[:action].in?(%w[new edit]) && @extra_service.persisted? && @extra_service.valid?
h2.ui.dividing.header
  = "#{t("admin.#{show ? 'show' : @extra_service.new_record? ? 'new' : 'edit'}")}#{model.model_name.human} - #{@hotel.chinese}"
= render 'admin/shared/admin_form_messages', object: @hotel
= form_for @extra_service, url: [:admin, @hotel, @extra_service], method: @extra_service.new_record? ? :post : :put, html: { multipart: true } do |f|
  .ui.grid
    .three.wide.column
      .js_admin_sticky
        .ui.vertical.menu.pointing
          - @hotel.extra_services.each do |extra_service|
            = link_to extra_service.name, show ? admin_hotel_hotel_extra_service_path(@hotel, extra_service) : edit_admin_hotel_hotel_extra_service_path(@hotel, extra_service), class: "item #{'active' if @extra_service == extra_service}"
          = link_to new_admin_hotel_hotel_extra_service_path(@hotel), class: "item #{'active' if @extra_service.new_record?}" do
            i.icon.add.circle
            = "#{t("admin.new")}#{model.model_name.human}"
        .ui.aligned.basic.segment
          - if show
            = link_to t('admin.edit'), [:edit, :admin, @hotel, @extra_service], class: :'ui label teal button huge'
          - else
            - if @extra_service.persisted?
              = link_to "#{t("admin.delete")}", [:admin, @hotel, @extra_service], method: :delete, data: { confirm: '确定删除套餐特点？', 'turbolinks-eval' => false }, class: :'ui label red button huge'
              .ui.horizontal.divider OR
            = f.submit t('admin.submit'), class: :'ui label teal button huge'
    .thirteen.wide.column
      = render partial: 'admin/hotels/steps', locals: { show: show, status: :extra_service, hotel: @hotel }
      .ui.fluid.form.segment
        = f.hidden_field :hotel_id, value: @hotel.id
        .fields
          .four.wide.field.required
            = f.label :name
          .eight.wide.field
            - if show
              .text = f.object.try(:name)
            - else
              = f.text_field :name, class: :js_admin_text_limit, :'data-max' => 20
        .fields
          .four.wide.field.required
            = f.label :time
          .eight.wide.field
            - if show
              .text = f.object.try(:time)
            - else
              = f.select :time, options_for_select(HotelExtraService::TIMES, @extra_service.time), {}, class: 'dropdown'
        .fields
          .four.wide.field.required
            = f.label :sequence
          .eight.wide.field
            - if show
              .text = f.object.try(:sequence)
            - else
              = f.text_field :sequence
        .fields
          .four.wide.field.required
            = f.label :keywords
          .eight.wide.field
            - if show
              .text
                = show_muti_fields f.object.keywords
            - else
              = sortable_muti_fields(f.object.keywords, 'hotel_extra_service[keywords][]')
        .fields
          .four.wide.field.required
            = f.label :itineraries
          .eight.wide.field
            - if show
              .text
                = show_muti_fields f.object.itineraries
            - else
              = sortable_muti_fields(f.object.itineraries, 'hotel_extra_service[itineraries][]')
        .fields
          .four.wide.field.required
            = f.label :presents
          .eight.wide.field
            - if show
              .text
                = show_muti_fields f.object.presents
            - else
              = sortable_muti_fields(f.object.presents, 'hotel_extra_service[presents][]')
        .fields
          .four.wide.field.required
            = f.label :exclusives
          .eight.wide.field
            - if show
              .text
                = show_muti_fields f.object.exclusives
            - else
              = sortable_muti_fields(f.object.exclusives, 'hotel_extra_service[exclusives][]')
        .fields
          .four.wide.field.required
            = f.label :tips
          .eight.wide.field
            - if show
              .text
                = show_muti_fields f.object.tips
            - else
              = sortable_muti_fields(f.object.tips, 'hotel_extra_service[tips][]')
        .fields
          .four.wide.field.required
            = f.label :cover_photo
          .eight.wide.field
            - if show
              = render partial: 'admin/photos/item', locals: { photos: f.object.try(:cover_photo) }
            - else
              = render partial: 'admin/photos/uploader', locals: { field: :"#{f.object_name}[cover_photo_id]", multiple: false, photos: f.object.try(:cover_photo) }
        .fields
          .four.wide.field.required
            = f.label :description
          .eight.wide.field
            - if show
              .text = simple_format f.object.try(:description)
            - else
              = f.text_area :description, class: :js_admin_text_limit, :'data-max' => 110
        .ui.divider
          .fields
            .four.wide.field
            .eight.wide.field
              br
              br
              - if show
                = link_to t('admin.edit'), [:edit, :admin, @hotel, @extra_service], class: :'ui label teal button huge'
              - else
                = f.submit t('admin.submit'), class: :'ui label teal button huge'
