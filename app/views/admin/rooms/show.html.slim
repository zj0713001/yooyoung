ruby:
  set_meta_tags(
    title: "#{ @hotel.chinese } - #{t('admin.seo.title')}"
  )
  show = !params[:action].in?(%w[new edit]) && @room.persisted? && @room.valid?
h2.ui.dividing.header
  = "#{t("admin.#{show ? 'show' : @room.new_record? ? 'new' : 'edit'}")}#{model.model_name.human} - #{@hotel.chinese}"
= render 'admin/shared/admin_form_messages', object: @hotel
= form_for @room, url: [:admin, @hotel, @room], method: @room.new_record? ? :post : :put, html: { multipart: true } do |f|
  .ui.grid
    .three.wide.column
      .js_admin_sticky
        .ui.vertical.menu.pointing
          - @hotel.rooms.each do |room|
            = link_to [room.chinese, room.name].join(' '), show ? admin_hotel_room_path(@hotel, room) : edit_admin_hotel_room_path(@hotel, room), class: "item #{'active' if room == @room}"
          = link_to new_admin_hotel_room_path(@hotel), class: "item #{'active' if @room.new_record?}" do
            i.icon.add.circle
            = t("admin.new")
        .ui.aligned.basic.segment
          - if show
            = link_to t('admin.edit'), [:edit, :admin, @hotel, @room], class: :'ui label teal button huge'
          - else
            = f.submit t('admin.submit'), class: :'ui label teal button huge'
    .thirteen.wide.column
      = render partial: 'admin/hotels/steps', locals: { show: show, status: :room, hotel: @hotel }
      .ui.fluid.form.segment
        .fields
          .four.wide.field
            = f.label :name
          .eight.wide.field
            - if show
              .text = @room.try(:name)
            - else
              = f.hidden_field :hotel_id, value: @hotel.id
              = f.text_field :name
        .fields
          .four.wide.field.required
            = f.label :chinese
          .eight.wide.field
            - if show
              .text = @room.try(:chinese)
            - else
              = f.text_field :chinese
        .fields
          .four.wide.field
            = f.label :photos
          .eight.wide.field
            - if show
              = render partial: 'admin/photos/item', locals: { photos: @room.try(:photos) }
            - else
              = render partial: 'admin/photos/uploader', locals: { field: :"room[photo_ids][]", multiple: true, photos: @room.try(:photos) }
        .fields
          .four.wide.field
            = f.label :features
          .eight.wide.field
            - if show
              .text = simple_format @room.try(:features)
            - else
              = f.text_area :features
        .fields
          .four.wide.field.required
            = f.label :facilities
          .eight.wide.field
            - if show
              .text
                = show_muti_fields @room.try(:facilities)
            - else
              = sortable_muti_fields(@room.try(:facilities), "room[facilities][]")
        .fields
          .four.wide.field
            = f.label :sight
          .eight.wide.field
            - if show
              .text = @room.try(:sight)
            - else
              = f.text_field :sight
        .fields
          .four.wide.field
            = f.label :area
          .eight.wide.field
            - if show
              .text = @room.try(:area)
            - else
              = f.text_field :area
        .fields
          .four.wide.field
            = f.label :bed_type
          .eight.wide.field
            - if show
              .text = @room.try(:bed_type)
            - else
              = f.text_field :bed_type
        .fields
          .four.wide.field.required
            = f.label :population
          .eight.wide.field
            - if show
              .text = @room.try(:population)
            - else
              = f.text_field :population
        .ui.divider
          .fields
            .four.wide.field
            .eight.wide.field
              br
              br
              - if show
                = link_to t('admin.edit'), [:edit, :admin, @hotel], class: :'ui label teal button huge'
              - else
                = f.submit t('admin.submit'), class: :'ui label teal button huge'
