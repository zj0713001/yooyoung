- show = @hotel.persisted? && @hotel.valid?
h2.ui.dividing.header
  = "#{t("admin.#{show ? 'show' : @hotel.new_record? ? 'new' : 'edit'}")}#{model.model_name.human}"
- if %w[create update destroy].include?(params[:action])
  - if @hotel.valid?
    .ui.ignored.success.message
      p #{t("admin.#{params[:action]}")} #{t('admin.successful')}
  - else
    .ui.ignored.error.message
      p #{t("admin.#{params[:action]}")} #{t('admin.failed')}
.ui.fluid.form.segment
  h3.ui.header 酒店
  = form_for @hotel, url: [:admin, @hotel], method: @hotel.new_record? ? :post : :put, html: { multipart: true } do |f|
    .fields
      .four.wide.field.required
        = f.label :name
      .eight.wide.field
        - if show
          = @hotel.name
        - else
          = f.text_field :name
    .fields
      .four.wide.field.required
        = f.label :chinese
      .eight.wide.field
        - if show
            = @hotel.chinese
        - else
          = f.text_field :chinese
    .fields
      .four.wide.field.required
        = f.label :city_id
      .eight.wide.field
        - if show
          = link_to_if can?(:show, City), @hotel.city.chinese, [:admin, @hotel.city] if @hotel.city.present?
        - else
          = f.select :city_id, grouped_options_for_select(Country.active.includes(:cities).map{|country| { country.chinese => country.cities.map{|city| [city.chinese, city.id]}}}.inject(&:merge), @hotel.city_id), {}, class: :'js_admin_search_select'
    .fields
      .four.wide.field.required
        = f.label :address
      .eight.wide.field
        - if show
          = @hotel.address
        - else
          = f.text_field :address
    .fields
      .four.wide.field.required
        = f.label :cover_photo
      .eight.wide.field
        - if show
          = render partial: 'admin/photos/item', locals: { photos: [@hotel.cover_photo] }
        - else
          = render partial: 'admin/photos/uploader', locals: { field: :'hotel[cover_photo][id]', multiple: false, photos: [@hotel.cover_photo] }
    .fields
      .four.wide.field.required
        = f.label :description
      .eight.wide.field
        - if show
          = simple_format @hotel.description
        - else
          = f.text_area :description
    .fields
      .four.wide.field.required
        = f.label :traffics
      .eight.wide.field
        - if show
          = show_muti_fields @hotel.traffics
        - else
          = sortable_muti_fields(@hotel.traffics, 'hotel[traffics][]')
    .fields
      .four.wide.field.required
        = f.label :provisions
      .eight.wide.field
        - if show
          = show_muti_fields @hotel.provisions
        - else
          = sortable_muti_fields(@hotel.provisions, 'hotel[provisions][]')
    .ui.divider
    h3.ui.header 酒店套餐
    = f.fields_for :package, @hotel.package do |ff|
      .fields
        .four.wide.field.required
          = ff.label :name
        .eight.wide.field
          - if show
            = ff.object.try(:name)
          - else
            = ff.text_field :name
      .fields
        .four.wide.field.required
          = ff.label :description
        .eight.wide.field
          - if show
            = simple_format ff.object.try(:description)
          - else
            = ff.text_area :description
      .fields
        .four.wide.field.required
          = ff.label :cover_photo
        .eight.wide.field
          - if show
            = render partial: 'admin/photos/item', locals: { photos: [ff.object.try(:cover_photo)] }
          - else
            = render partial: 'admin/photos/uploader', locals: { field: :"#{ff.object_name}[cover_photo][id]", multiple: false, photos: [ff.object.try(:cover_photo)] }
      h4.ui.header 酒店套餐项
      .js_admin_dynamic_fields_group
        = ff.fields_for :items do |fff|
          .js_admin_dynamic_fields
            .fields
              .four.wide.field.required
              .eight.wide.field
                .ui.divider
                - unless show
                  .js_admin_dynamic_fields_remove.ui.label.red.button.large
                    i.icon.remove
                    | 删除下面的套餐项
                    = fff.check_box :_destroy, class: :hidden
            .fields
              .four.wide.field.required
                = fff.label :cover_photo
              .eight.wide.field
                - if show
                  = render partial: 'admin/photos/item', locals: { photos: [fff.object.try(:cover_photo)] }
                - else
                  = render partial: 'admin/photos/uploader', locals: { field: :"#{fff.object_name}[cover_photo][id]", multiple: false, photos: [fff.object.try(:cover_photo)] }
            .fields
              .four.wide.field.required
                = fff.label :contents
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:contents)
                - else
                  = sortable_muti_fields(fff.object.try(:contents), "#{fff.object_name}[contents][]")
            .fields
              .four.wide.field.required
                = fff.label :description
              .eight.wide.field
                - if show
                  = simple_format fff.object.try(:description)
                - else
                  = fff.text_area :description
            .fields
              .four.wide.field.required
                = fff.label :address
              .eight.wide.field
                - if show
                  = fff.object.try(:address)
                - else
                  = fff.text_field :address
            .fields
              .four.wide.field.required
                = fff.label :tips
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:tips)
                - else
                  = sortable_muti_fields(fff.object.try(:tips), "#{fff.object_name}[tips][]")
            .fields
              .four.wide.field.required
                = fff.label :service_day
              .eight.wide.field
                - if show
                  = fff.object.try(:service_day)
                - else
                  = fff.select :service_day, options_for_select(HotelPackageItem::SERVICE_DAYS.to_a), {}, class: :'js_admin_search_select'
        - unless show
          .fields
            .four.wide.field.required
            .eight.wide.field
              .js_admin_dynamic_fields_add.ui.label.purple.button.large
                i.icon.add
                | 加一项酒店套餐项
    .ui.divider
    h3.ui.header 悠漾套餐
    = f.fields_for :favorite_package, @hotel.favorite_package do |ff|
      .fields
        .four.wide.field.required
          = ff.label :name
        .eight.wide.field
          - if show
            = ff.object.try(:name)
          - else
            = ff.text_field :name
      .fields
        .four.wide.field.required
          = ff.label :description
        .eight.wide.field
          - if show
            = simple_format ff.object.try(:description)
          - else
            = ff.text_area :description
      .fields
        .four.wide.field.required
          = ff.label :cover_photo
        .eight.wide.field
          - if show
            = render partial: 'admin/photos/item', locals: { photos: [ff.object.try(:cover_photo)] }
          - else
            = render partial: 'admin/photos/uploader', locals: { field: :"#{ff.object_name}[cover_photo][id]", multiple: false, photos: [ff.object.try(:cover_photo)] }
      h4.ui.header 悠漾套餐项
      .js_admin_dynamic_fields_group
        = ff.fields_for :items do |fff|
          .js_admin_dynamic_fields
            .fields
              .four.wide.field.required
              .eight.wide.field
                .ui.divider
                - unless show
                  .js_admin_dynamic_fields_remove.ui.label.red.button.large
                    i.icon.remove
                    | 删除下面的套餐项
                    = fff.check_box :_destroy, class: :hidden
            .fields
              .four.wide.field.required
                = fff.label :cover_photo
              .eight.wide.field
                - if show
                  = render partial: 'admin/photos/item', locals: { photos: [fff.object.try(:cover_photo)] }
                - else
                  = render partial: 'admin/photos/uploader', locals: { field: :"#{fff.object_name}[cover_photo][id]", multiple: false, photos: [fff.object.try(:cover_photo)] }
            .fields
              .four.wide.field.required
                = fff.label :contents
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:contents)
                - else
                  = sortable_muti_fields(fff.object.try(:contents), "#{fff.object_name}[contents][]")
            .fields
              .four.wide.field.required
                = fff.label :description
              .eight.wide.field
                - if show
                  = simple_format fff.object.try(:description)
                - else
                  = fff.text_area :description
            .fields
              .four.wide.field.required
                = fff.label :address
              .eight.wide.field
                - if show
                  = fff.object.try(:address)
                - else
                  = fff.text_field :address
            .fields
              .four.wide.field.required
                = fff.label :tips
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:tips)
                - else
                  = sortable_muti_fields(fff.object.try(:tips), "#{fff.object_name}[tips][]")
            .fields
              .four.wide.field.required
                = fff.label :service_day
              .eight.wide.field
                - if show
                  = fff.object.try(:service_day)
                - else
                  = fff.select :service_day, options_for_select(HotelPackageItem::SERVICE_DAYS.to_a), {}, class: :'js_admin_search_select'
        - unless show
          .fields
            .four.wide.field.required
            .eight.wide.field
              .js_admin_dynamic_fields_add.ui.label.purple.button.large
                i.icon.add
                | 加一项悠漾套餐项
      .ui.divider
      h3.ui.header 酒店房间
      .js_admin_dynamic_fields_group
        = ff.fields_for :rooms do |fff|
          .js_admin_dynamic_fields
            .fields
              .four.wide.field.required
              .eight.wide.field
                .ui.divider
                - unless show
                  .js_admin_dynamic_fields_remove.ui.label.red.button.large
                    i.icon.remove
                    | 删除下面的酒店房间
                    = fff.check_box :_destroy, class: :hidden
            .fields
              .four.wide.field.required
                = fff.label :name
              .eight.wide.field
                - if show
                  = fff.object.try(:name)
                - else
                  = fff.text_field :name
            .fields
              .four.wide.field.required
                = fff.label :description
              .eight.wide.field
                - if show
                  = simple_format fff.object.try(:description)
                - else
                  = fff.text_area :description
            .fields
              .four.wide.field.required
                = fff.label :photo_ids
              .eight.wide.field
                - if show
                  = render partial: 'admin/photos/item', locals: { photos: [fff.object.try(:photos)] }
                - else
                  = render partial: 'admin/photos/uploader', locals: { field: :"#{fff.object_name}[photo_ids][]", multiple: true, photos: [fff.object.try(:photos)] }
            .fields
              .four.wide.field.required
                = fff.label :features
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:features)
                - else
                  = sortable_muti_fields(fff.object.try(:features), "#{fff.object_name}[features][]")
            .fields
              .four.wide.field.required
                = fff.label :facilities
              .eight.wide.field
                - if show
                  = show_muti_fields fff.object.try(:facilities)
                - else
                = sortable_muti_fields(fff.object.try(:facilities), "#{fff.object_name}[facilities][]")
            .fields
              .four.wide.field.required
                = fff.label :sight
              .eight.wide.field
                - if show
                  = fff.object.try(:sight)
                - else
                  = fff.text_field :sight
            .fields
              .four.wide.field.required
                = fff.label :area
              .eight.wide.field
                - if show
                  = fff.object.try(:area)
                - else
                  = fff.text_field :area
            .fields
              .four.wide.field.required
                = fff.label :population
              .eight.wide.field
                - if show
                  = fff.object.try(:population)
                - else
                  = fff.text_field :population
        - unless show
          .fields
            .four.wide.field.required
            .eight.wide.field
              .js_admin_dynamic_fields_add.ui.label.purple.button.large
                i.icon.add
                | 加一个酒店房间
    - unless show
      .fields
        .four.wide.field.required
        .eight.wide.field
          = f.submit t('admin.submit'), class: :'ui label teal button huge'
